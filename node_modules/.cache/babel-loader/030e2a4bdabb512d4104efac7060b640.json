{"ast":null,"code":"import _defineProperty from \"/home/chafer/Desktop/Project/Reactjs/react-admin-template-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ADD_NOTIFICATION, REMOVE_NOTIFICATION } from \"../actions/notifications.action\";\nconst initialState = {\n  notifications: [{\n    id: 1,\n    date: new Date(),\n    text: \"Hello new user\",\n    title: \"Welcome\"\n  }]\n};\n\nfunction notificationReducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_NOTIFICATION:\n      {\n        let maxId = Math.max.apply(Math, state.notifications.map(o => o.id));\n\n        if (maxId === -Infinity) {\n          maxId = 0;\n        }\n\n        let newItem = {\n          id: maxId + 1,\n          date: new Date(),\n          title: action.title,\n          text: action.text\n        };\n        return _objectSpread({}, state, {\n          notifications: [...state.notifications, newItem]\n        });\n      }\n\n    case REMOVE_NOTIFICATION:\n      {\n        return _objectSpread({}, state, {\n          notifications: state.notifications.filter(Notification => Notification.id !== action.id)\n        });\n      }\n\n    default:\n      return state;\n  }\n}\n\nexport default notificationReducer;","map":{"version":3,"sources":["/home/chafer/Desktop/Project/Reactjs/react-admin-template-master/src/store/reducers/notification.reducer.ts"],"names":["ADD_NOTIFICATION","REMOVE_NOTIFICATION","initialState","notifications","id","date","Date","text","title","notificationReducer","state","action","type","maxId","Math","max","apply","map","o","Infinity","newItem","filter","Notification"],"mappings":";;;;;;AACA,SAASA,gBAAT,EAA2BC,mBAA3B,QAAsD,iCAAtD;AAEA,MAAMC,YAAgC,GAAG;AACrCC,EAAAA,aAAa,EAAE,CAAC;AAACC,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE,IAAIC,IAAJ,EAAd;AAA0BC,IAAAA,IAAI,EAAE,gBAAhC;AAAkDC,IAAAA,KAAK,EAAE;AAAzD,GAAD;AADsB,CAAzC;;AAIA,SAASC,mBAAT,CAA6BC,KAAyB,GAAGR,YAAzD,EAAuES,MAAvE,EAAgH;AAC5G,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKZ,gBAAL;AAAuB;AACnB,YAAIa,KAAa,GAAEC,IAAI,CAACC,GAAL,CAASC,KAAT,CAAeF,IAAf,EAAqBJ,KAAK,CAACP,aAAN,CAAoBc,GAApB,CAAwBC,CAAC,IAAKA,CAAC,CAACd,EAAhC,CAArB,CAAnB;;AACA,YAAGS,KAAK,KAAK,CAACM,QAAd,EAAwB;AAAEN,UAAAA,KAAK,GAAG,CAAR;AAAY;;AACtC,YAAIO,OAAO,GAAG;AACVhB,UAAAA,EAAE,EAAES,KAAK,GAAG,CADF;AAEVR,UAAAA,IAAI,EAAE,IAAIC,IAAJ,EAFI;AAGVE,UAAAA,KAAK,EAAEG,MAAM,CAACH,KAHJ;AAIVD,UAAAA,IAAI,EAAEI,MAAM,CAACJ;AAJH,SAAd;AAMA,iCAAWG,KAAX;AAAkBP,UAAAA,aAAa,EAAE,CAAC,GAAGO,KAAK,CAACP,aAAV,EAAyBiB,OAAzB;AAAjC;AACH;;AACD,SAAKnB,mBAAL;AAA0B;AACtB,iCAAWS,KAAX;AAAkBP,UAAAA,aAAa,EAAEO,KAAK,CAACP,aAAN,CAC5BkB,MAD4B,CACrBC,YAAY,IAAIA,YAAY,CAAClB,EAAb,KAAoBO,MAAM,CAACP,EADtB;AAAjC;AAEH;;AACD;AACI,aAAOM,KAAP;AAjBR;AAmBH;;AAGD,eAAeD,mBAAf","sourcesContent":["import { IActionBase, INotificationState } from \"../models/root.interface\";\nimport { ADD_NOTIFICATION, REMOVE_NOTIFICATION } from \"../actions/notifications.action\";\n\nconst initialState: INotificationState = {\n    notifications: [{id: 1, date: new Date(), text: \"Hello new user\", title: \"Welcome\"}]\n};\n\nfunction notificationReducer(state: INotificationState = initialState, action: IActionBase): INotificationState {\n    switch (action.type) {\n        case ADD_NOTIFICATION: {\n            let maxId: number= Math.max.apply(Math, state.notifications.map(o =>  o.id));\n            if(maxId === -Infinity) { maxId = 0; }\n            let newItem = {\n                id: maxId + 1,\n                date: new Date(),\n                title: action.title,\n                text: action.text\n            };\n            return {...state, notifications: [...state.notifications, newItem]};\n        }\n        case REMOVE_NOTIFICATION: {\n            return {...state, notifications: state.notifications\n                .filter(Notification => Notification.id !== action.id)};\n        }\n        default:\n            return state;\n    }\n}\n\n\nexport default notificationReducer;"]},"metadata":{},"sourceType":"module"}