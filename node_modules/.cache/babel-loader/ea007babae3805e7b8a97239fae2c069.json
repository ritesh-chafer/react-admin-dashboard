{"ast":null,"code":"import _defineProperty from \"/home/chafer/Desktop/Project/Reactjs/react-admin-template-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/chafer/Desktop/Project/Reactjs/react-admin-template-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/chafer/Desktop/Project/Reactjs/react-admin-template-master/src/components/Orders/OrderForm.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, Fragment } from \"react\";\nimport TextInput from \"../../common/components/TextInput\";\nimport NumberInput from \"../../common/components/NumberInput\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addOrder } from \"../../store/actions/orders.actions\";\nimport { addNotification } from \"../../store/actions/notifications.action\";\nimport { clearSelectedProduct, changeProductAmount } from \"../../store/actions/products.action\";\n\nconst OrderForm = () => {\n  const dispatch = useDispatch();\n  const selectedProduct = useSelector(state => state.products.selectedProduct);\n  const initialFormState = {\n    name: {\n      error: \"\",\n      value: \"\"\n    },\n    product: {\n      error: \"\",\n      value: null\n    },\n    amount: {\n      error: \"\",\n      value: 0\n    },\n    totalPrice: {\n      error: \"\",\n      value: 0\n    }\n  };\n\n  const _useState = useState(initialFormState),\n        _useState2 = _slicedToArray(_useState, 2),\n        formState = _useState2[0],\n        setFormState = _useState2[1];\n\n  function hasAmountChanged(model) {\n    let totalPrice = formState.totalPrice.value;\n\n    if (selectedProduct) {\n      totalPrice = selectedProduct.price * model.value;\n    }\n\n    setFormState(_objectSpread({}, formState, {\n      amount: {\n        error: model.error,\n        value: model.value\n      },\n      totalPrice: {\n        error: model.error,\n        value: totalPrice\n      }\n    }));\n  }\n\n  function hasFormValueChanged(model) {\n    setFormState(_objectSpread({}, formState, {\n      [model.field]: {\n        error: model.error,\n        value: model.value\n      }\n    }));\n  }\n\n  function resetForm() {\n    setFormState(initialFormState);\n  }\n\n  function saveOrder(e) {\n    e.preventDefault();\n\n    if (isFormInvalid()) {\n      return;\n    }\n\n    saveForm(formState);\n  }\n\n  function saveForm(formState) {\n    if (selectedProduct) {\n      if (selectedProduct.amount < formState.amount.value) {\n        alert(\"Not enough products in warehouse\");\n        return;\n      }\n\n      formState.product.value = selectedProduct;\n      dispatch(addOrder({\n        id: 0,\n        name: formState.name.value,\n        amount: formState.amount.value,\n        totalPrice: formState.totalPrice.value,\n        product: formState.product.value\n      }));\n      dispatch(addNotification(\"Order added\", \"Order \".concat(formState.name.value, \" added by you\")));\n      dispatch(clearSelectedProduct());\n      dispatch(changeProductAmount(selectedProduct.id, formState.amount.value));\n      resetForm();\n    }\n  }\n\n  function isFormInvalid() {\n    return formState.amount.error || formState.totalPrice.error || formState.name.error || formState.product.error || !formState.name.value || !selectedProduct;\n  }\n\n  function getDisabledClass() {\n    let isError = isFormInvalid();\n    return isError ? \"disabled\" : \"\";\n  }\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card shadow mb-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card-header py-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"h6\", {\n    className: \"m-0 font-weight-bold text-green\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Create order\")), React.createElement(\"div\", {\n    className: \"card-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: saveOrder,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group col-md-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(TextInput, {\n    id: \"input_name\",\n    value: formState.name.value,\n    field: \"name\",\n    onChange: hasFormValueChanged,\n    required: true,\n    maxLength: 20,\n    label: \"Name\",\n    placeholder: \"Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group col-md-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(NumberInput, {\n    id: \"input_amount\",\n    value: formState.amount.value,\n    field: \"amount\",\n    onChange: hasAmountChanged,\n    max: 1000,\n    min: 0,\n    label: \"Amount\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group col-md-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(NumberInput, {\n    id: \"input_totalPrice\",\n    value: formState.totalPrice.value,\n    field: \"totalPrice\",\n    onChange: hasFormValueChanged,\n    max: 1000,\n    min: 0,\n    label: \"Price\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }))), React.createElement(\"button\", {\n    className: \"btn btn-danger\",\n    onClick: () => resetForm(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, \"Reset\"), React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-success left-margin \".concat(getDisabledClass()),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"Create\")))));\n};\n\nexport default OrderForm;","map":{"version":3,"sources":["/home/chafer/Desktop/Project/Reactjs/react-admin-template-master/src/components/Orders/OrderForm.tsx"],"names":["React","useState","Fragment","TextInput","NumberInput","useDispatch","useSelector","addOrder","addNotification","clearSelectedProduct","changeProductAmount","OrderForm","dispatch","selectedProduct","state","products","initialFormState","name","error","value","product","amount","totalPrice","formState","setFormState","hasAmountChanged","model","price","hasFormValueChanged","field","resetForm","saveOrder","e","preventDefault","isFormInvalid","saveForm","alert","id","getDisabledClass","isError"],"mappings":"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","sourcesContent":["import React, { useState, FormEvent, Fragment, Dispatch } from \"react\";\nimport { IProduct } from \"../../store/models/product.interface\";\nimport TextInput from \"../../common/components/TextInput\";\nimport NumberInput from \"../../common/components/NumberInput\";\nimport { OnChangeModel, IOrderFormState } from \"../../common/types/Form.types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addOrder } from \"../../store/actions/orders.actions\";\nimport { addNotification } from \"../../store/actions/notifications.action\";\nimport { clearSelectedProduct, changeProductAmount } from \"../../store/actions/products.action\";\nimport { IStateType } from \"../../store/models/root.interface\";\n\nconst OrderForm: React.FC = () => {\n    const dispatch: Dispatch<any> = useDispatch();\n    const selectedProduct: IProduct | null = useSelector((state: IStateType) => state.products.selectedProduct);\n    const initialFormState: IOrderFormState = {\n        name: { error: \"\", value: \"\" },\n        product: { error: \"\", value: null },\n        amount: { error: \"\", value: 0 },\n        totalPrice: { error: \"\", value: 0 },\n    };\n\n    const [formState, setFormState] = useState(initialFormState);\n\n    function hasAmountChanged(model: OnChangeModel): void {\n        let totalPrice: number = formState.totalPrice.value;\n        if (selectedProduct) {\n            totalPrice = selectedProduct.price * (model.value as number);\n        }\n\n        setFormState({\n            ...formState,\n            amount: { error: model.error, value: model.value as number },\n            totalPrice: { error: model.error, value: totalPrice }\n        });\n\n    }\n\n    function hasFormValueChanged(model: OnChangeModel): void {\n        setFormState({ ...formState, [model.field]: { error: model.error, value: model.value } });\n    }\n\n    function resetForm(): void {\n        setFormState(initialFormState);\n    }\n\n    function saveOrder(e: FormEvent<HTMLFormElement>): void {\n        e.preventDefault();\n        if (isFormInvalid()) {\n            return;\n        }\n\n        saveForm(formState);\n    }\n\n    function saveForm(formState: IOrderFormState): void {\n        if (selectedProduct) {\n            if (selectedProduct.amount < formState.amount.value) {\n                alert(\"Not enough products in warehouse\");\n                return;\n            }\n\n            formState.product.value = selectedProduct;\n            dispatch(addOrder({\n                id: 0,\n                name: formState.name.value,\n                amount: formState.amount.value,\n                totalPrice: formState.totalPrice.value,\n                product: formState.product.value as IProduct\n            }));\n\n            dispatch(addNotification(\"Order added\", `Order ${formState.name.value} added by you`));\n            dispatch(clearSelectedProduct());\n            dispatch(changeProductAmount(selectedProduct.id, formState.amount.value));\n            resetForm();\n        }\n    }\n\n    function isFormInvalid(): boolean {\n        return (formState.amount.error || formState.totalPrice.error\n            || formState.name.error || formState.product.error || !formState.name.value\n            || !selectedProduct) as boolean;\n    }\n\n    function getDisabledClass(): string {\n        let isError: boolean =  isFormInvalid();\n        return isError ? \"disabled\" : \"\";\n    }\n\n    return (\n        <Fragment>\n            <div className=\"card shadow mb-4\">\n                <div className=\"card-header py-3\">\n                    <h6 className=\"m-0 font-weight-bold text-green\">Create order</h6>\n                </div>\n                <div className=\"card-body\">\n                    <form onSubmit={saveOrder}>\n                        <div className=\"form-row\">\n                            <div className=\"form-group col-md-12\">\n                                <TextInput id=\"input_name\"\n                                    value={formState.name.value}\n                                    field=\"name\"\n                                    onChange={hasFormValueChanged}\n                                    required={true}\n                                    maxLength={20}\n                                    label=\"Name\"\n                                    placeholder=\"Name\" />\n                            </div>\n                            <div className=\"form-group col-md-6\">\n                                <NumberInput id=\"input_amount\"\n                                    value={formState.amount.value}\n                                    field=\"amount\"\n                                    onChange={hasAmountChanged}\n                                    max={1000}\n                                    min={0}\n                                    label=\"Amount\" />\n                            </div>\n\n                            <div className=\"form-group col-md-6\">\n                                <NumberInput id=\"input_totalPrice\"\n                                    value={formState.totalPrice.value}\n                                    field=\"totalPrice\"\n                                    onChange={hasFormValueChanged}\n                                    max={1000}\n                                    min={0}\n                                    label=\"Price\" />\n                            </div>\n                        </div>\n                        <button className=\"btn btn-danger\" onClick={() => resetForm()}>Reset</button>\n                        <button type=\"submit\" className={`btn btn-success left-margin ${getDisabledClass()}`}>Create</button>\n                    </form>\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default OrderForm;\n"]},"metadata":{},"sourceType":"module"}