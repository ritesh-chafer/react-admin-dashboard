{"ast":null,"code":"import _defineProperty from \"/home/chafer/Desktop/Project/Reactjs/react-admin-template-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ADD_PRODUCT, CHANGE_PRODUCT_PENDING_EDIT, EDIT_PRODUCT, REMOVE_PRODUCT, CLEAR_PRODUCT_PENDING_EDIT, SET_MODIFICATION_STATE, CHANGE_PRODUCT_AMOUNT } from \"../actions/products.action\";\nimport { ProductModificationStatus } from \"../models/product.interface\";\nconst initialState = {\n  modificationState: ProductModificationStatus.None,\n  selectedProduct: null,\n  products: [{\n    id: 1,\n    name: \"Chocolate\",\n    description: \"This is Chocolate and it is Sweet\",\n    amount: 10,\n    price: 4,\n    hasExpiryDate: true,\n    category: \"Sweet\"\n  }, {\n    id: 2,\n    name: \"Apple\",\n    description: \"This is Apple and it is healthy\",\n    amount: 5,\n    price: 2,\n    hasExpiryDate: true,\n    category: \"Fruit\"\n  }, {\n    id: 3,\n    name: \"Straw\",\n    description: \"This is Straw and you can use it for your drink\",\n    amount: 100,\n    price: 1,\n    hasExpiryDate: false,\n    category: \"Kitchen\"\n  }, {\n    id: 4,\n    name: \"Spoon\",\n    description: \"This is Spoon and it is useful while eating\",\n    amount: 3,\n    price: 2,\n    hasExpiryDate: false,\n    category: \"Kitchen\"\n  }, {\n    id: 5,\n    name: \"Sugar\",\n    description: \"This is Sugar and it is to make your life sweet\",\n    amount: 15,\n    price: 5,\n    hasExpiryDate: true,\n    category: \"Sweet\"\n  }]\n};\n\nfunction productsReducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_PRODUCT:\n      {\n        let maxId = Math.max.apply(Math, state.products.map(function (o) {\n          return o.id;\n        }));\n        action.product.id = maxId + 1;\n        return _objectSpread({}, state, {\n          products: [...state.products, action.product]\n        });\n      }\n\n    case EDIT_PRODUCT:\n      {\n        const foundIndex = state.products.findIndex(pr => pr.id === action.product.id);\n        let products = state.products;\n        products[foundIndex] = action.product;\n        return _objectSpread({}, state, {\n          products: products\n        });\n      }\n\n    case REMOVE_PRODUCT:\n      {\n        return _objectSpread({}, state, {\n          products: state.products.filter(pr => pr.id !== action.id)\n        });\n      }\n\n    case CHANGE_PRODUCT_PENDING_EDIT:\n      {\n        return _objectSpread({}, state, {\n          selectedProduct: action.product\n        });\n      }\n\n    case CLEAR_PRODUCT_PENDING_EDIT:\n      {\n        return _objectSpread({}, state, {\n          selectedProduct: null\n        });\n      }\n\n    case SET_MODIFICATION_STATE:\n      {\n        return _objectSpread({}, state, {\n          modificationState: action.value\n        });\n      }\n\n    case CHANGE_PRODUCT_AMOUNT:\n      {\n        const foundIndex = state.products.findIndex(pr => pr.id === action.id);\n        let products = state.products;\n        products[foundIndex].amount = products[foundIndex].amount - action.amount;\n        return _objectSpread({}, state, {\n          products: products\n        });\n      }\n\n    default:\n      return state;\n  }\n}\n\nexport default productsReducer;","map":{"version":3,"sources":["/home/chafer/Desktop/Project/Reactjs/react-admin-template-master/src/store/reducers/products.reducer.ts"],"names":["ADD_PRODUCT","CHANGE_PRODUCT_PENDING_EDIT","EDIT_PRODUCT","REMOVE_PRODUCT","CLEAR_PRODUCT_PENDING_EDIT","SET_MODIFICATION_STATE","CHANGE_PRODUCT_AMOUNT","ProductModificationStatus","initialState","modificationState","None","selectedProduct","products","id","name","description","amount","price","hasExpiryDate","category","productsReducer","state","action","type","maxId","Math","max","apply","map","o","product","foundIndex","findIndex","pr","filter","value"],"mappings":"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","sourcesContent":["import { IProductState, IActionBase } from \"../models/root.interface\";\nimport { ADD_PRODUCT, CHANGE_PRODUCT_PENDING_EDIT, EDIT_PRODUCT, REMOVE_PRODUCT,\n    CLEAR_PRODUCT_PENDING_EDIT, SET_MODIFICATION_STATE, CHANGE_PRODUCT_AMOUNT} from \"../actions/products.action\";\nimport { IProduct, ProductModificationStatus } from \"../models/product.interface\";\n\n\n\nconst initialState: IProductState = {\n    modificationState: ProductModificationStatus.None,\n    selectedProduct: null,\n    products: [{\n        id: 1, name: \"Chocolate\", description: \"This is Chocolate and it is Sweet\",\n        amount: 10, price: 4, hasExpiryDate: true, category: \"Sweet\"\n    },\n    {\n        id: 2, name: \"Apple\", description: \"This is Apple and it is healthy\",\n        amount: 5, price: 2, hasExpiryDate: true, category: \"Fruit\"\n    },\n    {\n        id: 3, name: \"Straw\", description: \"This is Straw and you can use it for your drink\",\n        amount: 100, price: 1, hasExpiryDate: false, category: \"Kitchen\"\n    },\n    {\n        id: 4, name: \"Spoon\", description: \"This is Spoon and it is useful while eating\",\n        amount: 3, price: 2, hasExpiryDate: false, category: \"Kitchen\"\n    },\n    {\n        id: 5, name: \"Sugar\", description: \"This is Sugar and it is to make your life sweet\",\n        amount: 15, price: 5, hasExpiryDate: true, category: \"Sweet\"\n    }]\n};\n\nfunction productsReducer(state: IProductState = initialState, action: IActionBase): IProductState {\n    switch (action.type) {\n        case ADD_PRODUCT: {\n            let maxId: number = Math.max.apply(Math, state.products.map(function(o) { return o.id; }));\n            action.product.id = maxId + 1;\n            return { ...state, products: [...state.products, action.product]};\n        }\n        case EDIT_PRODUCT: {\n            const foundIndex: number = state.products.findIndex(pr => pr.id === action.product.id);\n            let products: IProduct[] = state.products;\n            products[foundIndex] = action.product;\n            return { ...state, products: products };\n        }\n        case REMOVE_PRODUCT: {\n            return { ...state, products: state.products.filter(pr => pr.id !== action.id) };\n        }\n        case CHANGE_PRODUCT_PENDING_EDIT: {\n            return { ...state, selectedProduct: action.product };\n        }\n        case CLEAR_PRODUCT_PENDING_EDIT: {\n            return { ...state, selectedProduct: null };\n        }\n        case SET_MODIFICATION_STATE: {\n            return { ...state, modificationState: action.value };\n        }\n        case CHANGE_PRODUCT_AMOUNT: {\n            const foundIndex: number = state.products.findIndex(pr => pr.id === action.id);\n            let products: IProduct[] = state.products;\n            products[foundIndex].amount = products[foundIndex].amount - action.amount;\n            return { ...state, products: products };\n        }\n        default:\n            return state;\n    }\n}\n\n\nexport default productsReducer;"]},"metadata":{},"sourceType":"module"}